A função alert no JavaScript tem escopo global.

Já a função querySelector é um método do objeto document.

O método querySelector busca um elemento no documento a partir de um seletor:
    tag => seletor de tag (sem caracter prévio).
    .nome_da_classe => seletor de classe (ponto prévio).
    #id_do_objeto => seletor de classe (cerquilha prévia).
    tag[propriedade=valor_propriedade] => seletor de tag por propriedade.
        (Ex.: input[type=password] busca campos de senha.)

JavaScript é case sensitive.

Para que o som seja tocado, é necessário que os objetos esperados pelo main.js
sejam carregados primeiro. Por isso, a tag script precisa ir para o fim do
body do HTML.

Os navegadores não permitem execução de mídia sem que o usuário tenha 
interagido com a página. Por isso o play automático não funciona.

No JavaScript, onclick é um atributo das tags, então elas recebem atribuição.

O código abaixo tem um problema:
    document.querySelector('.tecla_pom').onclick=tocaSomPom();

A função tocaSomPom() não tem retorno para atribuir a onclick. Por isso, o
código é executado, não atribuído a onclick.

O correto é atribuir somente a função, não o retorno dela:
    document.querySelector('.tecla_pom').onclick=tocaSomPom; //Sem parênteses.

O método document.querySelector busca apenas o primeiro elemento encontrado 
pelo seletor. Temos o método document.querySelectorAll para selecionar todos
os elementos que contenham esse seletor.

Para declarar constantes em JavaScript, usamos:
    const constante = valor;

Com constantes é possível obter elementos sem repetir códigos longos (como o 
do querySelector ou querySelectorAll).

Declarações de variáveis em JavaScript se faz com a palavra reservada let:
    let variavel = valor;

O loop com while está inserindo a nova função tocaSom em todos os botões. A
função tocaSom funciona bem, se você for usá-la nas Dev Tools do browser.
Falta agora definir como os parâmetros serão fornecidos para cada botão.

Chamar a função da forma abaixo tem um problema: 
    listaDeTeclas[contador].onclick = tocaSom("#som_tecla_psh");

A função de tocarSom é executada sem dar retorno que seria atribuído ao botão.
Para atribuir uma função com parâmetros, use uma função anônima, assim:

    listaDeTeclas[contador].onclick = function () {
        tocaSom("#som_tecla_psh")
    };

Usar a notação de crase (`) para strings permite inserir variáveis dentro da
string (igual às f-strings do Python). Essa notação se chama template string:
    const idAudio = `#som_${instrumento}`;

Cada variável referenciada na notação de crase precisa de estar no formato
`texto_estatico${variável}texto_estatico` (perceba o  texto ${variavel}).

Um problema ao adicionar a classe 'ativa': qualquer tecla usada acrescenta a 
classe 'ativa' ao botão.
